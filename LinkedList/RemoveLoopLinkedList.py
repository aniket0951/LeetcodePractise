class Node:	def __init__(self, data):		self.data = data		self.next = Noneclass LinkedList:	def __init__(self):		self.head = None 		def InsertNode(self,val):		if self.head == None:			self.head = val		else:			temp = self.head			while temp.next != None:				temp = temp.next 			temp.next = val	def ViewNode(self):		temp = self.head					while temp != None:			print(temp.data)			temp = temp.next     	def partition(self,x):		arr = []		temp = self.head 		while temp != None:			arr.append(temp.data)			temp = temp.next				i = 0		n = len(arr)		small_el = []		while i < n:			if arr[i] < x:				small_el.append(arr[i])				del arr[i]				n = len(arr)			else:				i+=1 			newl = LinkedList()		for i in small_el:			node = Node(i)			newl.InsertNode(node)		for j in arr:			node = Node(j)			newl.InsertNode(node)	        		return self.head	    head = [1,4,3,2,5,2]# head = [1,5,6,7,3,2,2,0]x = 3linked_list = LinkedList()			for i in head:	node = Node(i)	linked_list.InsertNode(node)		# linked_list.ViewNode()data = (linked_list.partition(x))temp = datawhile temp != None:	print(temp.data)	temp = temp.next